---
layout: post
title:  "vi编辑器"
date:   2020-07-20 08:00:01 +0800
categories: 
tags: tcpip
description: 技术书籍笔记
---

### 6.使用Linux环境变量


#### 6.1什么是环境变量

bash shell用一个叫做`环境变量`的特性来存储有关shell回话和工作环境的信息（这也是他们被称作环境变量的原因）。这项特性允许你在内存中存储数据，一边程序或shell运行的脚本能够轻松访问他们。这也是存储持久数据的一种简便方法。

##### 全局变量

    查看全局变量
    env               #显示所有但是不支持个别环境变量
    printenv          #显示所有
    printenv  HOME    #显示个别环境变量

##### 局部变量

    set 命令会显示某个特定进程设置的所有环境变量，包括局部变量、全局变量以及用户定义变量

#### 6.2设置用户定义变量

    设置全局环境变量
    export my_variable
    尽管子shell重新定义并导出了变量，但是父shell中的同名变量依然保留这原先的值

#### 6.3删除环境变量

    unset LD_LIBRARY_PATH

    如果要用到变量，使用$;如果要操作环境变量，不适用$。这条规则一个例外就是使用printenv显示某个变量的值

#### 6.4默认的shell环境变量

    HOME
    PATH
    PS1
    PS2
    ENV      

#### 6.5设置PATH环境变量

    保证PATH环境变量包含了所有存放应用程序的目录
    export PATH=$PATH:/home/scripts
    程序员通常将单点符号加入环境变量。单点符号代表当前目录
    PATH=$PATH:.

#### 6.6定位系统环境变量

    登录shell会从5个不同的启动文件里读取命令：

    /etc/profile        #使用for语句迭代/etc/profile.d/目录下所有文件

    #shell登录会照如下顺序，运行第一个被找到的文件余下忽略，顺序中没有.bashrc，该文件通过其他文件运行（以下文件会运行 . ~/.bashrc）
    $HOME/.bash_profile
    $HOME/.bash_login
    $HOME/.profile

    #交互式shell只会检查.bashrc文件。ssh直接登录用户不会加载.bashrc文件
    $HOME/.bashrc

由于升级系统会刷新/etc/profile文件，最好是在/etc/profile.d目录中创建一个以.sh结尾的文件。把所有新的或修改过的全局变量设置放在这个文件中。

#### 6.7数组变量

环境变量有个特性就是他们可作为数组使用，能够存储多个值的变量。

    mytest=(one two three four five)
    echo $mytest
    echo $mytest[2]   #不能调用数组元素
    echo ${mytest[2]}
    echo ${mytest[*]}
    mystest[2]=seven
    echo ${mytest[*]}
    unset mytest[2]
    echo ${mytest[*]}
    unset mytest
    echo ${mytest[*]}

### 7理解Linux文件权限

#### 7.1/etc/passwd文件

    登录用户名
    用户密码
    用户账户的UID（数字形式）
    用户账户的GID（数字形式）
    用户账户的文本描述（称为备注字段）
    用户HOME目录的位置
    用户的默认shell

root用户账户是Linux系统的管理员，固定分配给它的UID是0

Linux为系统账户预留了500以下的UID值，有些服务甚至要用特定的UID才能正常工作。为普通用户创建账户时，大多数Linux系统从500开始，将第一个可用UID分配给这个账户。

    查看所有Linux系统中的这些默认值
    useradd -D
    SKEL=/etc/skel
    useradd
    -d home_dir 不想用登录名作为主目录名的话，可以指定其他目录
    -m 创建用户的HOME目录
    -U 创建一个与用户登录名同名的新组
    -s shell 指定默认的登录shell
    useradd -D -s /bin/tsch

    userdel -r test 删除用户及HOME目录以及右键目录

    修改用户
    usermod
    -L 锁定账户，使用户无法登录
    -U 解除锁定，使用户能够登录

    chpasswd < users.txt  #将含有userid:passwd对的文件重定向给该命令
    chage 用例管理用户账户的有效期

#### 7.2/etc/group文件

    组名
    组密码
    GID
    属于该组的用户列表

    usermod -G shared rich #将rich默认组替换为shared
    usermod -g shared test #将test添加到shared组中

    -代表文件
    d代表目录
    l代表链接
    c代表字符型设备
    b代表块设备
    n代表网络设备
    rwx可读可写可执行
    属主、属组、系统其它用户

默认文件权限

    umask 0022 所以默认权限是666-022=644，全权限666减去umask掩码，umask第一位是粘着位

改变安全性设置

    chmod o+r newfile
    chmod u-x newfile

    chown dan:shared newfile
    chgrp shared newfile

共享文件

    设置用户ID（SUID）：当文件被用户使用时，程序会以文件属主权限运行
    设置组ID（SGID）：对文件来说，程序会以文件属组的权限进行；对目录来说，目录中创建的新文件会以目录默认属组作为默认属组
    粘着位：进程结束后文件还驻留（粘着）在内存中

chmod SUID、SGID、粘着位的八进制

    二进制       八进制     描述
    000          0         所有位都清零
    001          1         粘着位置位
    011          3         SGID和粘着位置位
    111          7         SUID、SGID、粘着位置位
